apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Chart.Name }}
  labels:
    name: {{ .Chart.Name }}
  annotations:
    prometheus.io/path: "/actuator/prometheus"
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        name: {{ .Chart.Name }}
        app: {{ .Chart.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{.Values.service.port}}
              protocol: TCP
          volumeMounts:
          - mountPath: /home/athena/athena.env
            name: athenaenv
            subPath: athena.env
          resources:
            requests:
              cpu: 200m
              memory: "1024Mi"
            limits:
              cpu: 500m
              memory: "2048Mi"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: http
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: http
          # resources:
          #   {{- toYaml .Values.resources | nindent 12 }}
          command: 
          - "/bin/sh"
          - "-c"
          args: 
            - . /home/athena/athena.env && java -Dspring.profiles.active=eks -Dspring.kafka.consumer.topics=stage-athena-run-changes,stage-athena-route-changes -Dspring.kafka.consumer.group-id=${CLIENT_ID}-aggregator -Dspring.kafka.consumer.concurrency=12 -Dspring.kafka.consumer.bootstrap-servers=b-1.athenamsk.eg7z0i.c3.kafka.us-east-2.amazonaws.com:9092 -Dspring.kafka.producer.bootstrap-servers=b-1.athenamsk.eg7z0i.c3.kafka.us-east-2.amazonaws.com:9092 -Dtenant.id=${TENANT_ID} -Dapp.name=aggregator_run -Dtenant.name=${CLIENT_ID} -jar -XX:+UseG1GC -Xms256m -Xmx1024m  /home/athena/app.jar
      volumes:
        - name: athenaenv
          configMap:
            defaultMode: 420
            name: athenaenv
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Chart.Name }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Chart.Name }}
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Pods
    pods:
      metricName: jvm_threads_live_threads
      targetAverageValue: 2500
  - type: Pods
    pods:
      metricName: tomcat_threads_current_threads
      targetAverageValue: 50